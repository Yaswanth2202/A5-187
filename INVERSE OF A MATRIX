#include <stdio.h>

#define N 3

 

int main()

{

    int A[N][N];

    int B[N][N];

    int i, j, k;

 

    // Input elements in matrix

    printf("Enter elements in matrix of order %dx%d:\n", N, N);

    for(i=0; i<N; i++)

    {

        for(j=0; j<N; j++)

        {

            scanf("%d", &A[i][j]);

        }

    }

 

    // Find inverse of A[][] and store it in B[][]

    for (i=0; i<N; i++)

    {

        for (j=0; j<N; j++)

        {

            if (i == j)

                B[i][j] = 1;

            else

                B[i][j] = 0;

        }

    }

 

    // Transform the matrix A[][] to its adjoint

    for (i=0; i<N; i++)

    {

        for (j=0; j<N; j++)

        {

            if (i != j)

            {

                // Interchanging rows and columns to get the

                // cofactor of A[i][j]

                int temp = A[i][j];

                A[i][j] = A[j][i];

                A[j][i] = temp;

            }

        }

    }

 

    // Calculating the determinant of A[][]

    int det = 0;

    for (i=0; i<N; i++)

        det = det + (A[0][i] * (A[1][(i+1)%3] * A[2][(i+2)%3] - A[1][(i+2)%3] * A[2][(i+1)%3]));

 

    // Finding the inverse of A[][]

    for (i=0; i<N; i++)

    {

        for (j=0; j<N; j++)

            B[i][j] = (A[i][j] * B[i][j]) / det;

    }

 

    // Display Inverse of A[][]

    printf("\nInverse of matrix is: \n");

    for(i=0; i<N; i++)

    {

        for(j=0; j<N; j++)

            printf("%d  ", B[i][j]);

 

        printf("\n");

    }

 

    return 0;

}
